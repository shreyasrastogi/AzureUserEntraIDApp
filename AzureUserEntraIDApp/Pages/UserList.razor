@page "/userlist"
@page "/userlist/{showEditOnly:bool?}/{showDisableOnly:bool?}/{showDeleteOnly:bool?}/{showNoButtons:bool?}/{showActionsColumn:bool?}"
@using System.Net.Http
@using System.Net.Http.Json
@inject HttpClient Http
@inject NavigationManager Navigation

<h3>User List</h3>

@if (users == null)
{
    <p><em>Loading...</em></p>
}
else if (users.Count == 0)
{
    <p>No users found.</p>
}
else
{
    <table class="table table-bordered table-striped">
        <thead>
            <tr>
                <th>Display Name</th>
                <th>Mail Nickname</th>
                <th>User Principal Name</th>
                @if (showActionsColumn == true)
                {
                    <th>Actions</th>
                }
            </tr>
        </thead>
        <tbody>
            @foreach (var user in users)
            {
                <tr>
                    <td>@user.DisplayName</td>
                    <td>@user.MailNickname</td>
                    <td>@user.UserPrincipalName</td>
                    @if (showActionsColumn == true)
                    {
                        <td>
                            @if (showNoButtons == true)
                            {
                                <!-- No buttons -->
                            }
                            else if (showEditOnly == true)
                            {
                                <button class="btn btn-primary" @onclick="() => EditUser(user)">Edit</button>
                            }
                            else if (showDisableOnly == true)
                            {
                                <button class="btn btn-warning" @onclick="() => DisableUser(user)">Disable</button>
                            }
                            else if (showDeleteOnly == true)
                            {
                                <button class="btn btn-danger" @onclick="() => DeleteUser(user)">Delete</button>
                            }
                            else
                            {
                                <button class="btn btn-primary" @onclick="() => EditUser(user)">Edit</button>
                                <button class="btn btn-warning" @onclick="() => DisableUser(user)">Disable</button>
                                <button class="btn btn-danger" @onclick="() => DeleteUser(user)">Delete</button>
                            }
                        </td>
                    }
                </tr>
            }
        </tbody>
    </table>
}

@code {
    [Parameter]
    public bool? showEditOnly { get; set; }
    [Parameter]
    public bool? showDisableOnly { get; set; }
    [Parameter]
    public bool? showDeleteOnly { get; set; }
    [Parameter]
    public bool? showNoButtons { get; set; }
    [Parameter]
    public bool? showActionsColumn { get; set; }

    private List<User> users;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            users = await Http.GetFromJsonAsync<List<User>>("/api/GetUsers");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error fetching users: {ex.Message}");
        }
    }

    private void EditUser(User user)
    {
        Navigation.NavigateTo($"/edituser/{user.UserPrincipalName}");
    }

    private void DeleteUser(User user)
    {
        Navigation.NavigateTo($"/deleteuser/{user.UserPrincipalName}");
    }

    private void DisableUser(User user)
    {
        Navigation.NavigateTo($"/disableuser/{user.UserPrincipalName}");
    }

    public class User
    {
        public string DisplayName { get; set; }
        public string MailNickname { get; set; }
        public string UserPrincipalName { get; set; }
    }
}

