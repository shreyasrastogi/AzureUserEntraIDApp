@page "/disableuser/{userPrincipalName}"
@using System.Net.Http
@using System.Net.Http.Json
@inject HttpClient Http
@inject NavigationManager Navigation

<h3>Disable User</h3>

@if (successMessageVisible)
{
    <div class="alert alert-success" role="alert">
        User Disabled Successfully
    </div>
}

<div class="mb-3">
    <label for="firstName" class="form-label">First Name</label>
    <InputText id="firstName" class="form-control" @bind-Value="user.givenName" Disabled />
</div>
<div class="mb-3">
    <label for="lastName" class="form-label">Last Name</label>
    <InputText id="lastName" class="form-control" @bind-Value="user.surname" Disabled />
</div>
<div class="mb-3">
    <label for="userPrincipalName" class="form-label">User Principal Name</label>
    <InputText id="userPrincipalName" class="form-control" @bind-Value="user.UserPrincipalName" Disabled />
</div>
<div class="mb-3">
    <label for="department" class="form-label">Department</label>
    <InputText id="department" class="form-control" @bind-Value="user.Department" Disabled />
</div>

<button class="btn btn-warning" @onclick="HandleConfirm">Confirm</button>

@code {
    [Parameter]
    public string userPrincipalName { get; set; }

    private User user = new User();
    private bool successMessageVisible = false;

    protected override async Task OnInitializedAsync()
    {
        user = await Http.GetFromJsonAsync<User>($"/api/GetUser/{userPrincipalName}");
    }

    private async Task HandleConfirm()
    {
        var response = await Http.PutAsJsonAsync("/api/DisableUser", user);
        if (response.IsSuccessStatusCode)
        {
            successMessageVisible = true;
        }
        else
        {
            // Handle error
        }
    }

    public class User
    {
        public string givenName { get; set; }
        public string surname { get; set; }
        public string UserPrincipalName { get; set; }
        public string Department { get; set; }
    }
}





