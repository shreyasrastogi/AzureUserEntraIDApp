@page "/resetuserpassword/{userPrincipalName}"

@using System.Net.Http.Json
@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Components.Web
@inject HttpClient Http
@inject NavigationManager Navigation

<PageTitle>Reset User Password</PageTitle>

<h3>Reset User Password</h3>

@if (!string.IsNullOrEmpty(resetPasswordResponse))
{
    <div class="alert alert-success" role="alert">
        @resetPasswordResponse
    </div>
}

<EditForm Model="passwordReset" OnValidSubmit="SubmitResetPassword">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label for="userPrincipalName" class="form-label">User Principal Name</label>
        <input id="userPrincipalName" class="form-control" @bind="passwordReset.UserPrincipalName" readonly />
    </div>
    <div class="mb-3">
        <label for="newPassword" class="form-label">New Password</label>
        <input id="newPassword" type="password" class="form-control" @bind="passwordReset.NewPassword" />
    </div>
    <button type="submit" class="btn btn-primary">Reset Password</button>
</EditForm>

@code {
    [Parameter]
    public string UserPrincipalName { get; set; }

    private PasswordResetRequest passwordReset = new PasswordResetRequest();
    private string resetPasswordResponse = string.Empty;

    protected override void OnInitialized()
    {
        passwordReset.UserPrincipalName = UserPrincipalName;
    }

    private async Task SubmitResetPassword()
    {
        if (string.IsNullOrEmpty(passwordReset.UserPrincipalName) || string.IsNullOrEmpty(passwordReset.NewPassword))
        {
            resetPasswordResponse = "Please enter all required information.";
            return;
        }

        var response = await Http.PostAsJsonAsync($"api/ResetUserPassword/{passwordReset.UserPrincipalName}", passwordReset);
        if (response.IsSuccessStatusCode)
        {
            resetPasswordResponse = "User password reset successfully.";
        }
        else
        {
            resetPasswordResponse = "Error resetting user password.";
        }
    }

    public class PasswordResetRequest
    {
        public string UserPrincipalName { get; set; } = string.Empty;
        public string NewPassword { get; set; } = string.Empty;
    }
}